<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>艾迪酥筆記</title>
	<subtitle>騙吃騙喝的學習心得與技術分享</subtitle>
	
	<link href="https://eddiesu.com/feed/feed.xml" rel="self"/>
	<link href="https://eddiesu.com"/>
	<updated>2022-09-16T00:00:00Z</updated>
	<id>https://eddiesu.com</id>
	<author>
		<name>艾迪酥 (Eddie Su)</name>
		<email></email>
	</author>
	
	<entry>
		<title>Hello World!</title>
		<link href="https://eddiesu.com/posts/HelloWorld/"/>
		<updated>2022-08-29T00:00:00Z</updated>
		<id>https://eddiesu.com/posts/HelloWorld/</id>
		<content type="html">
		  &lt;h3 id=&quot;%E5%89%8D%E8%A8%80&quot;&gt;前言 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/HelloWorld/#%E5%89%8D%E8%A8%80&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;身為工程獅、程序猿的密，第一次接觸 Eleventy，發個 Hello World 也是合情合理的吧。&lt;/p&gt;
&lt;h3 id=&quot;%E5%8F%83%E8%80%83&quot;&gt;參考 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/HelloWorld/#%E5%8F%83%E8%80%83&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://frannn.dev/posts/82901432/&quot;&gt;離開 Hexo，使用 Eleventy 架設部落格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/08/22/eleventy-over-hexo/&quot;&gt;除了 hexo，也可以考慮用 eleventy 來寫技術部落格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jason-memo.dev/posts/why-i-leave-medium-and-build-blog-with-eleventy/&quot;&gt;為什麼我離開 Medium 用 eleventy 做一個 blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

		</content>
	</entry>
	
	<entry>
		<title>Git 多個帳號對應到不同的 repository 時，該怎麼辦？</title>
		<link href="https://eddiesu.com/posts/Git%20%E5%A4%9A%E5%80%8B%E5%B8%B3%E8%99%9F%E5%B0%8D%E6%87%89%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%20repository%20%E6%99%82%EF%BC%8C%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/"/>
		<updated>2022-08-30T00:00:00Z</updated>
		<id>https://eddiesu.com/posts/Git%20%E5%A4%9A%E5%80%8B%E5%B8%B3%E8%99%9F%E5%B0%8D%E6%87%89%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%20repository%20%E6%99%82%EF%BC%8C%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/</id>
		<content type="html">
		  &lt;h3 id=&quot;%E5%89%8D%E8%A8%80&quot;&gt;前言 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/Git%20%E5%A4%9A%E5%80%8B%E5%B8%B3%E8%99%9F%E5%B0%8D%E6%87%89%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%20repository%20%E6%99%82%EF%BC%8C%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E5%89%8D%E8%A8%80&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;現今 Git 百家爭鳴，舉凡 Github、Gitlab、Azure DevOps...&lt;br /&gt;
應改不可能只使用一個平台，或是只有一個帳號吧！&lt;br /&gt;
如果是，那以下可省略了。👋&lt;/p&gt;
&lt;h3 id=&quot;%E5%85%A8%E5%9F%9F%E8%A8%AD%E5%AE%9A&quot;&gt;全域設定 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/Git%20%E5%A4%9A%E5%80%8B%E5%B8%B3%E8%99%9F%E5%B0%8D%E6%87%89%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%20repository%20%E6%99%82%EF%BC%8C%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E5%85%A8%E5%9F%9F%E8%A8%AD%E5%AE%9A&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;首先，檢查一下 gloabal 和 system 的 config，&lt;br /&gt;
主要是看有没有 credential.helper 把帳號密碼存起来了。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config &lt;span class=&quot;token parameter variable&quot;&gt;--global&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-l&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config &lt;span class=&quot;token parameter variable&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-l&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;確認設在哪個後，執行 unset credential.helper`,&lt;br /&gt;
這樣就能重新輸入帳號密碼了。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config &lt;span class=&quot;token parameter variable&quot;&gt;--global&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--unset&lt;/span&gt; credential.helper&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config &lt;span class=&quot;token parameter variable&quot;&gt;--system&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--unset&lt;/span&gt; credential.helper&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;%E5%90%84%E8%87%AA%E7%9A%84%E6%AC%8A%E9%99%90%E8%A8%AD%E5%AE%9A&quot;&gt;各自的權限設定 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/Git%20%E5%A4%9A%E5%80%8B%E5%B8%B3%E8%99%9F%E5%B0%8D%E6%87%89%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%20repository%20%E6%99%82%EF%BC%8C%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E5%90%84%E8%87%AA%E7%9A%84%E6%AC%8A%E9%99%90%E8%A8%AD%E5%AE%9A&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;先確認一下本地 repository 的遠端連線資訊，&lt;br /&gt;
https 開頭的就是使用https，git@ 開頭的就是使用ssh。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote &lt;span class=&quot;token parameter variable&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以 Github 為例，大概會是長這樣的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;{帳號}&lt;/strong&gt;@github.com/&lt;strong&gt;{帳號}&lt;/strong&gt;/&lt;strong&gt;{repository 名稱}&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;設定帳號與 repository 對應：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote set-url origin https://UserA@github.com/UserA/repoA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這時候 push，就要输入一下 UserA 的密码，然后就能 push 上去了。&lt;br /&gt;
但每次 push 都需要输入密码了也太麻煩了吧！&lt;br /&gt;
為了避免麻烦，針對本地的 repository，設置一下 local 的 credential.helper ：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config &lt;span class=&quot;token parameter variable&quot;&gt;--local&lt;/span&gt; credential.helper store&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看當前配置：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config &lt;span class=&quot;token parameter variable&quot;&gt;--list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最後，為了避免 &lt;a href=&quot;http://user.name/&quot;&gt;user.name&lt;/a&gt; 與 user.email 使用到全域設定，&lt;br /&gt;
在 repository 底下也設定一組吧。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.name &lt;span class=&quot;token string&quot;&gt;&quot;your name&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config user.email &lt;span class=&quot;token string&quot;&gt;&quot;your email&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;%E7%B8%BD%E7%B5%90&quot;&gt;總結 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/Git%20%E5%A4%9A%E5%80%8B%E5%B8%B3%E8%99%9F%E5%B0%8D%E6%87%89%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%20repository%20%E6%99%82%EF%BC%8C%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E7%B8%BD%E7%B5%90&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;清空 global 和system 的credential.helper。&lt;/li&gt;
&lt;li&gt;對 repository 設定一下 remote 和 local 的 credential.helper&lt;/li&gt;
&lt;/ol&gt;

		</content>
	</entry>
	
	<entry>
		<title>慘，Git 提交錯誤的程式該怎麼辦？</title>
		<link href="https://eddiesu.com/posts/%E6%85%98%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%8C%AF%E8%AA%A4%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/"/>
		<updated>2022-08-31T00:00:00Z</updated>
		<id>https://eddiesu.com/posts/%E6%85%98%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%8C%AF%E8%AA%A4%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/</id>
		<content type="html">
		  &lt;h3 id=&quot;%E5%89%8D%E8%A8%80&quot;&gt;前言 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E6%85%98%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%8C%AF%E8%AA%A4%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E5%89%8D%E8%A8%80&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人總有會犯錯的時候，或是隊友開雷的時候，或是當你 log 潔癖犯病的時候，&lt;br /&gt;
其時候還是有辦法補救的。&lt;/p&gt;
&lt;h3 id=&quot;%E5%88%A0%E9%99%A4%E6%9F%90%E6%AC%A1-commit&quot;&gt;删除某次 commit &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E6%85%98%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%8C%AF%E8%AA%A4%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E5%88%A0%E9%99%A4%E6%9F%90%E6%AC%A1-commit&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以透過 git reset 將程式回復到某次提交的狀態，&lt;br /&gt;
執行前，建議先將程式做好備份，避免心血化為烏有，&lt;br /&gt;
commit 回復後，之前提的修改可能會消失，&lt;br /&gt;
主要是看你選擇 soft 或是 hard。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git reset --soft：回復到某次提交狀態後的修改會被退回到暫存區。&lt;br /&gt;
git reset --hard：回復到某次提交狀態後的修改不做任何保留。&lt;br /&gt;
git status      ：查看紀錄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;操作如下：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; log &lt;span class=&quot;token comment&quot;&gt;#查看 commit_id&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;commit_id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;#commit_id:要回復至哪次 commit&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push origin HEAD &lt;span class=&quot;token parameter variable&quot;&gt;--force&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;#強制推送至遠端&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;%E8%AA%A4%E5%88%AA%E4%BA%86%3F!&quot;&gt;誤刪了?! &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E6%85%98%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%8C%AF%E8%AA%A4%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E8%AA%A4%E5%88%AA%E4%BA%86%3F!&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果不小心刪錯了，還是能搶救的~&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reflog &lt;span class=&quot;token comment&quot;&gt;#詳細顯示你每個指令的 SHA-1 值&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; reset &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;hash&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--hard&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;#hash:要回復至哪個版本的編號&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;%E5%8F%83%E8%80%83&quot;&gt;參考 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E6%85%98%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%8C%AF%E8%AA%A4%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/#%E5%8F%83%E8%80%83&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/qq_34977392/article/details/110817621&quot;&gt;删除 commit 的三种方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

		</content>
	</entry>
	
	<entry>
		<title>自己的 Blog 自己架</title>
		<link href="https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/"/>
		<updated>2022-09-05T00:00:00Z</updated>
		<id>https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/</id>
		<content type="html">
		  &lt;h3 id=&quot;%E5%89%8D%E8%A8%80&quot;&gt;前言 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/#%E5%89%8D%E8%A8%80&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前一陣子，看了篇文章 &lt;a href=&quot;https://tdd.best/blog/why-engineers-should-keep-blogging/&quot;&gt;我為什麼鼓勵工程師寫 blog&lt;/a&gt;，&lt;br /&gt;
好像可以來搞個 Blog 試試看，雖然文筆不好，但就當作是筆記吧。&lt;/p&gt;
&lt;h3 id=&quot;%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD&quot;&gt;前置作業 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/#%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;看了一些網路上的資料，主要考慮為兩派，現有平台或是自建站台。&lt;/p&gt;
&lt;p&gt;現有平台：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://wordpress.com/&quot;&gt;Wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;自建站台：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-tw/&quot;&gt;Hexo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy(11ty)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;靠慮到會放程式碼，現有平台對程式碼區塊想對來說比較沒有那麼方便，所以就先剔除了，且身為工程師，不自建站台好像也說不太過去，剩下就是從 Hexo、Gatsby、Eleventy 中去挑選，最後 Eleventy 會勝出，主要是因為他的輕量，好處就是公版要修改的地方也少。&lt;br /&gt;
後來又看到了 &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog&quot; title=&quot;eleventy-high-performance-blog&quot;&gt;eleventy-high-performance-blog&lt;/a&gt;，一套 Google 工程師所建置的開源部落格模板，以打造高速效能為重，所以就決定用 &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog&quot; title=&quot;eleventy-high-performance-blog&quot;&gt;eleventy-high-performance-blog&lt;/a&gt; 的模板來建構 Blog 。&lt;/p&gt;
&lt;h3 id=&quot;eleventy-high-performance-blog&quot;&gt;eleventy-high-performance-blog &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/#eleventy-high-performance-blog&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;看到下面這張圖，都是100，能不香嗎?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://eddiesu.com/img/posts/eleventy-high-performance-blog.png&quot; alt=&quot;Lighthuose&quot; /&gt;&lt;/p&gt;
&lt;p&gt;官方Demo：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog&quot; title=&quot;Demo&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.industrialempathy.com/&quot;&gt;Original site this template was based on&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;特色：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;圖片的最佳化&lt;/li&gt;
&lt;li&gt;少量 CSS 跟 JS&lt;/li&gt;
&lt;li&gt;基本 SEO 都有&lt;/li&gt;
&lt;li&gt;有考量 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility&quot;&gt;a11y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;模板簡潔，檔案想對比較少，修改起來比較容易&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;雖然簡潔，真的很簡潔，看 &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog&quot; title=&quot;Demo&quot;&gt;Demo&lt;/a&gt; 就知道了，但好處就是想要什麼自己加，當作練功也是不錯的。&lt;/p&gt;
&lt;h3 id=&quot;%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B%EF%BC%8C%E5%BF%85%E5%85%88-clone&quot;&gt;工欲善其事，必先 clone &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/#%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B%EF%BC%8C%E5%BF%85%E5%85%88-clone&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;基本上，照著 &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog#getting-started&quot;&gt;Getting Started&lt;/a&gt; 的步驟，就可以把 &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog&quot; title=&quot;Demo&quot;&gt;Demo&lt;/a&gt; 建立起來。&lt;br /&gt;
但因為我的是 windows 環境，所以 在 &lt;strong&gt;package.json&lt;/strong&gt; 需要稍微修改一下，才能正常執行 &lt;code&gt;npm run watch&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;scripts&lt;/strong&gt; 底下新增 wBuild、wWatch、wServe、wClean，專門 windows 環境使用：&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;build-ci&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm run js-build &amp;amp;&amp;amp; eleventy &amp;amp;&amp;amp; npm run test&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm run clean &amp;amp;&amp;amp; npm run build-ci&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;watch&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;concurrently \&quot;npm run serve\&quot; \&quot;npm run js-build-watch\&quot; \&quot;npm run test-watch\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;serve&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm run clean &amp;amp;&amp;amp; eleventy --serve&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;js-build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;rollup -c rollup.config.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;js-build-watch&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;rollup -c rollup.config.js -w&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;DEBUG=* eleventy &amp;amp;&amp;amp; npm run test&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mocha test/test*.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;test-watch&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mocha test/test*.js --watch --watch-files=test/*&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;clean&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;rm -Rf ./_site/posts/*&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;wBuild&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm run wClean &amp;amp;&amp;amp; npm run build-ci&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;wWatch&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;concurrently \&quot;npm run wServe\&quot; \&quot;npm run js-build-watch\&quot; \&quot;npm run test-watch\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;wServe&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm run wClean &amp;amp;&amp;amp; eleventy --serve&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;wClean&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;rimraf ./_site/posts/*&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 windows 環境時，執行動作也要稍微修改一下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Build, serve, watch and test&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;   &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run wWatch&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Build and test&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;   &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run wBuild&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;%E9%A1%8F%E8%89%B2%E9%85%8D%E7%BD%AE&quot;&gt;顏色配置 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/#%E9%A1%8F%E8%89%B2%E9%85%8D%E7%BD%AE&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果不知道顏色怎麼搭配，可以參考 &lt;a href=&quot;http://colormind.io/bootstrap/&quot;&gt;Colormind&lt;/a&gt;。&lt;br /&gt;
&lt;img src=&quot;https://eddiesu.com/img/posts/Colormind.png&quot; alt=&quot;Colormind&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;%E7%B8%BD%E7%B5%90&quot;&gt;總結 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E8%87%AA%E5%B7%B1%E7%9A%84%20Blog%20%E8%87%AA%E5%B7%B1%E6%9E%B6/#%E7%B8%BD%E7%B5%90&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;到這裡，模板基本上應該是可以正常執行了，再來就是自由發揮了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系列文請參考 &lt;a href=&quot;https://eddiesu.com/tags/blog&quot;&gt;自己的 Blog 自己架&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

		</content>
	</entry>
	
	<entry>
		<title>寫網頁就是要炫耀啊，不然要幹麻？寄生 Github Pages</title>
		<link href="https://eddiesu.com/posts/%E5%AF%AB%E7%B6%B2%E9%A0%81%E5%B0%B1%E6%98%AF%E8%A6%81%E7%82%AB%E8%80%80%E5%95%8A%EF%BC%8C%E4%B8%8D%E7%84%B6%E8%A6%81%E5%B9%B9%E9%BA%BB%EF%BC%9F%E5%AF%84%E7%94%9F%20Github%20Pages/"/>
		<updated>2022-09-16T00:00:00Z</updated>
		<id>https://eddiesu.com/posts/%E5%AF%AB%E7%B6%B2%E9%A0%81%E5%B0%B1%E6%98%AF%E8%A6%81%E7%82%AB%E8%80%80%E5%95%8A%EF%BC%8C%E4%B8%8D%E7%84%B6%E8%A6%81%E5%B9%B9%E9%BA%BB%EF%BC%9F%E5%AF%84%E7%94%9F%20Github%20Pages/</id>
		<content type="html">
		  &lt;h3 id=&quot;%E5%89%8D%E8%A8%80&quot;&gt;前言 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E5%AF%AB%E7%B6%B2%E9%A0%81%E5%B0%B1%E6%98%AF%E8%A6%81%E7%82%AB%E8%80%80%E5%95%8A%EF%BC%8C%E4%B8%8D%E7%84%B6%E8%A6%81%E5%B9%B9%E9%BA%BB%EF%BC%9F%E5%AF%84%E7%94%9F%20Github%20Pages/#%E5%89%8D%E8%A8%80&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本地開方環境弄得差不多後，再來就是找個地方來放了。&lt;br /&gt;
既然 Github 提供了 &lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;Actoins&lt;/a&gt; 及 &lt;a href=&quot;https://docs.github.com/en/pages&quot;&gt;Pages&lt;/a&gt; 的服務，&lt;br /&gt;
當然不能辜負了官方的好意，透過調整 CI/CD workflow 來實現一條龍服務吧。&lt;/p&gt;
&lt;h3 id=&quot;%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD&quot;&gt;前置作業 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E5%AF%AB%E7%B6%B2%E9%A0%81%E5%B0%B1%E6%98%AF%E8%A6%81%E7%82%AB%E8%80%80%E5%95%8A%EF%BC%8C%E4%B8%8D%E7%84%B6%E8%A6%81%E5%B9%B9%E9%BA%BB%EF%BC%9F%E5%AF%84%E7%94%9F%20Github%20Pages/#%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;3支 branche：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;develop：主要為開發與修改使用。push 後會觸發 &lt;em&gt;Run CodeQL Analysis&lt;/em&gt; 和 &lt;em&gt;Build and Test&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;main：不做任何修改，透過 &lt;em&gt;Pull requests&lt;/em&gt; 異動，有異動便會觸發 &lt;em&gt;Build and Deploy&lt;/em&gt; 發布至 gh-pages。&lt;/li&gt;
&lt;li&gt;gh-pages：不做任何修改，由 Actions 自動更新，分支名稱 gh-pages 時，GitHub 便會預設將此分支設為 Pages 的來源，當然也可以依個人喜好到 Settings &amp;gt; Pages 修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;workflows&quot;&gt;Workflows &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E5%AF%AB%E7%B6%B2%E9%A0%81%E5%B0%B1%E6%98%AF%E8%A6%81%E7%82%AB%E8%80%80%E5%95%8A%EF%BC%8C%E4%B8%8D%E7%84%B6%E8%A6%81%E5%B9%B9%E9%BA%BB%EF%BC%9F%E5%AF%84%E7%94%9F%20Github%20Pages/#workflows&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;目前使用的有三個，分別是 codeql-analysis、build-and-test 和 build-and-deploy，&lt;br /&gt;
codeql-analysis 和 build-and-test 是 template 中就有的，沒有修改。&lt;/p&gt;
&lt;p&gt;build-and-deploy&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Runs build and deploy&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Build and Deploy&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token key atrule&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token key atrule&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token key atrule&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token key atrule&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;16.x&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@v2&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Use Node.js $&lt;br /&gt;        &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/setup&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;node@v1&lt;br /&gt;        &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token key atrule&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Install dependencies and build&lt;br /&gt;        &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; npm install &lt;span class=&quot;token important&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run build&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;ci&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Deploy&lt;br /&gt;        &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; JamesIves/github&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;pages&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;deploy&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;action@v4.3.4&lt;br /&gt;        &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token key atrule&quot;&gt;ssh-key&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;br /&gt;          &lt;span class=&quot;token key atrule&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; gh&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;pages&lt;br /&gt;          &lt;span class=&quot;token key atrule&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; _site&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Deploy 的部分，使用了 &lt;a href=&quot;https://github.com/JamesIves/github-pages-deploy-action&quot;&gt;JamesIves/github-pages-deploy-action&lt;/a&gt;，&lt;em&gt;Settings &amp;gt; Deploy Keys&lt;/em&gt; 及 &lt;em&gt;Settings &amp;gt; Secrets&lt;/em&gt; 記得要設定，可以參考&lt;a href=&quot;https://github.com/JamesIves/github-pages-deploy-action#using-an-ssh-deploy-key-&quot;&gt;說明文件&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;%E7%B8%BD%E7%B5%90&quot;&gt;總結 &lt;a class=&quot;direct-link&quot; href=&quot;https://eddiesu.com/posts/%E5%AF%AB%E7%B6%B2%E9%A0%81%E5%B0%B1%E6%98%AF%E8%A6%81%E7%82%AB%E8%80%80%E5%95%8A%EF%BC%8C%E4%B8%8D%E7%84%B6%E8%A6%81%E5%B9%B9%E9%BA%BB%EF%BC%9F%E5%AF%84%E7%94%9F%20Github%20Pages/#%E7%B8%BD%E7%B5%90&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;賀！網站已上線。基本 Blog 站台已成形，再來就各自發揮了，DNS、Google Analytics、Google Search Console、留言板之類的，就看個人有沒有要加了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系列文請參考 &lt;a href=&quot;https://eddiesu.com/tags/blog&quot;&gt;自己的 Blog 自己架&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

		</content>
	</entry>
</feed>
